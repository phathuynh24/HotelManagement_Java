/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.myproject.forms;

import com.mongodb.MongoException;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.myproject.swings.ScrollBar;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.bson.Document;

/**
 *
 * @author HP
 */
public class Form_6 extends javax.swing.JPanel {

    /**
     * Creates new form Form_6
     */
    public Form_6() {
        initComponents();
        jScrollPane1.setVerticalScrollBar(new ScrollBar());
        jScrollPane1.getVerticalScrollBar().setBackground(Color.WHITE);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        jScrollPane1.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        fetchDataFromMongoDB();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        searchText1 = new com.myproject.swings.SearchText();
        jButton2 = new javax.swing.JButton();
        buttonSec1 = new com.myproject.swings.ButtonSec();
        panelBorder1 = new com.myproject.swings.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new com.myproject.swings.Table();

        searchText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchText1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 133, 190));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Thêm");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonSec1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/icons/search.png"))); // NOI18N
        buttonSec1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSec1MouseClicked(evt);
            }
        });

        jLayeredPane1.setLayer(searchText1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(buttonSec1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(searchText1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(buttonSec1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 377, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchText1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSec1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Loại Phòng", "Giá/ Đêm", "Chức Năng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(70);
            table.getColumnModel().getColumn(0).setMaxWidth(70);
            table.getColumnModel().getColumn(2).setMinWidth(250);
            table.getColumnModel().getColumn(2).setMaxWidth(250);
            table.getColumnModel().getColumn(3).setMinWidth(100);
            table.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchText1ActionPerformed
            
    }//GEN-LAST:event_searchText1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Add_TypeRoom addtroom = new Add_TypeRoom();
        addtroom.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttonSec1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSec1MouseClicked
        DefaultTableModel ob=(DefaultTableModel) table.getModel();
        TableRowSorter<DefaultTableModel> obj=new TableRowSorter<>(ob);
        table.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(searchText1.getText()));
    }//GEN-LAST:event_buttonSec1MouseClicked
    private void fetchDataFromMongoDB(){
        try (MongoClient mongoClient = MongoClients.create("mongodb+srv://HotelGroup:xfwl2Y6oahXJugda@cluster0.awr6sf9.mongodb.net/")) {
            // Chọn cơ sở dữ liệu
            MongoDatabase database = mongoClient.getDatabase("Hotel_Management");
            // Chọn bảng
            MongoCollection<Document> collection = database.getCollection("RoomType");
            FindIterable<Document> cursor = collection.find();
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            model.setRowCount(0);
            // Tạo một Document mới chứa dữ liệu bạn muốn thêm
            
            for (Document document : cursor) {
                String value1 = document.getString("IDRoom");
                String value2 = document.getString("TypeRoom");
                String value3 = document.getString("CostRoom");
                
                // Thêm hàng mới vào tableModel
                model.addRow(new Object[]{value1, value2, value3});
            }
            // Thêm Document vào bảng
        } catch (Exception e) {
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
        }
    }
    class Add_TypeRoom extends JFrame
   {
    private JTextField txtRoomCode;
    private JTextField txtTypeRoom;
    private JTextField txtCostRoom;  
    
    public Add_TypeRoom()
    {
        setTitle("Thêm Loại Phòng");
        setSize(450, 200);
        setLocationRelativeTo(null);
        
        
        //Tạo các label
         JLabel lblRoomCode = new JLabel("Mã Loại Phòng:");
         JLabel lblTypeRoom = new JLabel("Tên Loại Phòng:");
         JLabel lblCostRoom = new JLabel("Đơn Giá:");
    
        //Tạo các trường nhập
    
        txtRoomCode = new JTextField(20);
        txtTypeRoom = new JTextField(20);
        txtCostRoom = new JTextField(20);

        JButton btnAdd = new JButton("Thêm");
        btnAdd.addActionListener((ActionEvent e) -> {
        String roomcode = txtRoomCode.getText();
        String typeRoom = txtTypeRoom.getText();
        String costroom = txtCostRoom.getText();
            
        if (roomcode.isEmpty() || typeRoom.isEmpty() || costroom.isEmpty() ) {
            JOptionPane.showMessageDialog(Add_TypeRoom.this, "Vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
            try (
                    MongoClient mongoClient = MongoClients.create("mongodb+srv://HotelGroup:xfwl2Y6oahXJugda@cluster0.awr6sf9.mongodb.net/")) {
                // Chọn cơ sở dữ liệu
                MongoDatabase database = mongoClient.getDatabase("Hotel_Management");
                
                // Chọn bảng
                MongoCollection<Document> collection = database.getCollection("RoomType");
                // Tạo một Document mới chứa dữ liệu bạn muốn thêm
                Document document = new Document("IDRoom", roomcode)
                        .append("TypeRoom", typeRoom)
                        .append("CostRoom", costroom);
                // Thêm Document vào bảng
                collection.insertOne(document);
                fetchDataFromMongoDB();
            } 
            catch (MongoException ex) {
                JOptionPane.showMessageDialog(Add_TypeRoom.this, "Lỗi khi cập nhật người dùng: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

            // Sau khi xử lý xong, có thể hiển thị thông báo thành công
            JOptionPane.showMessageDialog(Add_TypeRoom.this, "Thêm thành công!");

            setVisible(false);
        });
        JButton btnClose = new JButton("Đóng");
        btnClose.addActionListener((ActionEvent e) -> {
            setVisible(false);
        });
        
        // Tạo panel và thêm các thành phần vào panel
        JPanel panel1 = new JPanel(new GridLayout(4, 2));
        panel1.add(lblRoomCode);
        panel1.add(txtRoomCode);
        panel1.add(lblTypeRoom);
        panel1.add(txtTypeRoom);
        panel1.add(lblCostRoom);
        panel1.add(txtCostRoom);
        panel1.add(btnClose);
        panel1.add(btnAdd);
        

        // Thêm panel vào frame
        add(panel1);
        setVisible(true);
    }   
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.myproject.swings.ButtonSec buttonSec1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.myproject.swings.PanelBorder panelBorder1;
    private com.myproject.swings.SearchText searchText1;
    private com.myproject.swings.Table table;
    // End of variables declaration//GEN-END:variables

}


class Edit_UserForm extends JFrame {
    private JTextField txtRoomCode;
    private JTextField txtTypeRoom;
    private JTextField txtCostRoom;  
    private Map<String, String> userData;

    public Edit_UserForm(Map<String, String> userData) {
        this.userData = userData;

        setTitle("Chỉnh sửa thông tin");
        setSize(300, 200);
        setLocationRelativeTo(null);

        // Tạo các label
         JLabel lblRoomCode = new JLabel("Mã Loại Phòng:");
         JLabel lblTypeRoom = new JLabel("Tên Loại Phòng:");
         JLabel lblCostRoom = new JLabel("Đơn Giá:");

        // Tạo các trường nhập liệu và điền thông tin người dùng cần chỉnh sửa
        txtRoomCode = new JTextField(20);
        txtRoomCode.setText(userData.get("roomcode"));
        txtTypeRoom = new JTextField(20);
        txtTypeRoom.setText(userData.get("typeroom"));
        txtCostRoom = new JTextField(20);
        txtCostRoom.setText(userData.get("costroom"));
        
        // Tạo nút "Lưu"
        JButton btnSave = new JButton("Lưu");
        btnSave.addActionListener((ActionEvent e) -> {
            String roomcode = txtRoomCode.getText();
            String typeroom = txtTypeRoom.getText();
            String costroom = txtCostRoom.getText();
            
            if (roomcode.isEmpty() || typeroom.isEmpty() || costroom.isEmpty()) {
                JOptionPane.showMessageDialog(Edit_UserForm.this, "Vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // Thực hiện cập nhật thông tin người dùng trong cơ sở dữ liệu
            try {
                // Code cập nhật thông tin người dùng vào cơ sở dữ liệu tại đây
                
                // Hiển thị thông báo thành công
                JOptionPane.showMessageDialog(Edit_UserForm.this, "Cập nhật thành công!");
                
                setVisible(false);
            } catch (HeadlessException ex) {
                JOptionPane.showMessageDialog(Edit_UserForm.this, "Lỗi khi cập nhật: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Tạo panel và thêm các thành phần vào panel
        JPanel panel = new JPanel(new GridLayout(4, 2));
        panel.add(lblRoomCode);
        panel.add(txtRoomCode);
        panel.add(lblTypeRoom);
        panel.add(txtTypeRoom);
        panel.add(lblCostRoom);
        panel.add(txtCostRoom);
        panel.add(btnSave);

        // Thêm panel vào frame
        add(panel);

        setVisible(true);
    }
}